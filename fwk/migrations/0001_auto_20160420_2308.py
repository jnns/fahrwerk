# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-20 21:20
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.core.management import call_command
from django.db import migrations, models
import django.db.models.deletion
import fwk.models


def load_rates(apps, schema_editor):
    call_command("loaddata", "fwk/migrations/rates.json")


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('price_base', models.DecimalField(decimal_places=2, help_text='Der Grundpreis f\xfcr eine Abholung bzw. den ersten Kilometer.', max_digits=4, verbose_name='Grundpreis')),
                ('price_per_km', models.DecimalField(decimal_places=2, help_text='Der Preis pro gefahrenen Kilometer.', max_digits=4, verbose_name='Preis pro Km')),
                ('price_priority', models.DecimalField(decimal_places=2, editable=False, help_text='Wird derzeit noch nicht verwendet', max_digits=4, verbose_name='Zuschlag')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, default=1.19, help_text='Optional; standardm\xe4\xdfig 19 %.', max_digits=4, verbose_name='MwSt.')),
            ],
        ),
        migrations.AlterModelOptions(
            name='rate',
            options={'verbose_name': 'Tarif', 'verbose_name_plural': 'Tarife'},
        ),
        migrations.AlterField(
            model_name='rate',
            name='price_priority',
            field=models.DecimalField(decimal_places=2, editable=False, help_text='Wird derzeit noch nicht verwendet', max_digits=4, null=True, verbose_name='Zuschlag'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_person', models.CharField(max_length=40, verbose_name='Ansprechpartner_in')),
                ('from_company', models.CharField(blank=True, max_length=40, verbose_name='Firma')),
                ('from_street', models.CharField(max_length=30, verbose_name='Stra\xdfe und Hausnummer')),
                ('from_zipcode', models.PositiveSmallIntegerField(verbose_name='PLZ')),
                ('from_comment', models.CharField(blank=True, help_text='Geb\xe4ude, Stockwerk, o.\xc4.', max_length=40, verbose_name='Bemerkung')),
                ('timeframe_pickup', models.TimeField(choices=[(datetime.time(8, 0), ' 8:00 \u2013  9:00'), (datetime.time(9, 0), ' 9:00 \u2013 10:00'), (datetime.time(10, 0), '10:00 \u2013 11:00'), (datetime.time(11, 0), '11:00 \u2013 12:00'), (datetime.time(12, 0), '12:00 \u2013 13:00'), (datetime.time(13, 0), '13:00 \u2013 14:00'), (datetime.time(14, 0), '14:00 \u2013 15:00'), (datetime.time(15, 0), '15:00 \u2013 16:00'), (datetime.time(16, 0), '16:00 \u2013 17:00'), (datetime.time(17, 0), '17:00 \u2013 18:00'), (datetime.time(18, 0), '18:00 \u2013 19:00')], verbose_name='Zeitfenster Abholung')),
                ('to_person', models.CharField(max_length=40, verbose_name='Ansprechpartner_in')),
                ('to_company', models.CharField(blank=True, max_length=40, verbose_name='Firma')),
                ('to_street', models.CharField(max_length=30, verbose_name='Stra\xdfe und Hausnummer')),
                ('to_zipcode', models.PositiveSmallIntegerField(verbose_name='PLZ')),
                ('to_comment', models.CharField(blank=True, help_text='Geb\xe4ude, Stockwerk, o.\xc4.', max_length=40, verbose_name='Bemerkung')),
                ('timeframe_dropoff', models.TimeField(choices=[(datetime.time(8, 0), ' 8:00 \u2013  9:00'), (datetime.time(9, 0), ' 9:00 \u2013 10:00'), (datetime.time(10, 0), '10:00 \u2013 11:00'), (datetime.time(11, 0), '11:00 \u2013 12:00'), (datetime.time(12, 0), '12:00 \u2013 13:00'), (datetime.time(13, 0), '13:00 \u2013 14:00'), (datetime.time(14, 0), '14:00 \u2013 15:00'), (datetime.time(15, 0), '15:00 \u2013 16:00'), (datetime.time(16, 0), '16:00 \u2013 17:00'), (datetime.time(17, 0), '17:00 \u2013 18:00'), (datetime.time(18, 0), '18:00 \u2013 19:00')], verbose_name='Zeitfenster Auslieferung')),
                ('distance', models.PositiveSmallIntegerField(null=True, verbose_name='Distanz')),
                ('package_detail', models.CharField(blank=True, max_length=40, verbose_name='Was wird transportiert?')),
                ('packages_s', models.PositiveSmallIntegerField(default=0, verbose_name='Packst\xfccke klein')),
                ('packages_m', models.PositiveSmallIntegerField(default=0, verbose_name='Packst\xfccke mittel')),
                ('packages_l', models.PositiveSmallIntegerField(default=0, verbose_name='Packst\xfccke gro\xdf')),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-Adresse')),
                ('ordered', models.DateTimeField(auto_now_add=True, verbose_name='Bestelldatum')),
                ('delivered', models.DateTimeField(blank=True, null=True, verbose_name='Auslieferungsdatum')),
                ('ecourier_id', models.PositiveIntegerField(blank=True, help_text='Sobald diese Tour in eCourier \xfcbernommen wurde, sollte hier die         entsprechende Tournummer hinterlegt sein. Der Status `best\xe4tigt` kann nur         dann erteilt werden, wenn eine Tournummer angegeben wurde.', null=True, verbose_name='Tournummer')),
                ('status', models.CharField(blank=True, choices=[('UNFINISHED', '0. unfertig'), ('NEW', '1. neu'), ('CONFIRMED', '2. best\xe4tigt'), ('PICKED_UP', '3. abgeholt'), ('DELIVERED', '4. ausgeliefert'), ('CANCELED', 'x. storniert')], default='UNFINISHED', max_length=10)),
                ('from_phone_no', models.CharField(default='+49 ', max_length=15, validators=[django.core.validators.RegexValidator(message="Die Telefonnummer bitte nach diesem Format eingeben: '+49 000 00000'.", regex='^\\+?1?[ \\d]{9,15}$')], verbose_name='Telefonnummer')),
                ('to_phone_no', models.CharField(default='+49', max_length=15, verbose_name='Telefonnummer')),
                ('customer', models.CharField(choices=[('PICKUP', 'Abholung'), ('DROPOFF', 'Auslieferung')], default='PICKUP', max_length=8, verbose_name='Barzahlung bei')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Der Preis dieses Auftrags inkl. Mehrwertsteuer. Wird automatisch anhand         des Tarifs und der Strecke berechnet, kann aber \xfcberschrieben werden.', max_digits=4, null=True, verbose_name='Preis')),
                ('rate', models.ForeignKey(blank=True, help_text='Der Tarif wird automatisch anhand der Packst\xfccke berechnet, kann         aber \xfcberschrieben werden.', null=True, on_delete=django.db.models.deletion.CASCADE, to='fwk.Rate', verbose_name='Tarif')),
                ('directions_json', models.TextField(blank=True, verbose_name='Maps API JSON result')),
            ],
            options={
                'verbose_name': 'Bestellung',
                'verbose_name_plural': 'Bestellungen',
            },
        ),
        migrations.AddField(
            model_name='rate',
            name='price_service',
            field=models.DecimalField(decimal_places=2, default=1.8, max_digits=4, verbose_name='Servicezeit 5 Min'),
            preserve_default=False,
        ),
        migrations.AlterModelOptions(
            name='order',
            options={'ordering': ['-ordered'], 'verbose_name': 'Bestellung', 'verbose_name_plural': 'Bestellungen'},
        ),
        migrations.AlterModelOptions(
            name='rate',
            options={'ordering': ['price_base'], 'verbose_name': 'Tarif', 'verbose_name_plural': 'Tarife'},
        ),
        migrations.AlterField(
            model_name='order',
            name='from_phone_no',
            field=models.CharField(max_length=15, validators=[fwk.models.validate_phone_no], verbose_name='Telefonnummer'),
        ),
        migrations.AlterField(
            model_name='order',
            name='timeframe_dropoff',
            field=models.CharField(choices=[('ASAP', 'sobald wie m\xf6glich'), (datetime.time(8, 0), ' 8:00 \u2013  9:00'), (datetime.time(9, 0), ' 9:00 \u2013 10:00'), (datetime.time(10, 0), '10:00 \u2013 11:00'), (datetime.time(11, 0), '11:00 \u2013 12:00'), (datetime.time(12, 0), '12:00 \u2013 13:00'), (datetime.time(13, 0), '13:00 \u2013 14:00'), (datetime.time(14, 0), '14:00 \u2013 15:00'), (datetime.time(15, 0), '15:00 \u2013 16:00'), (datetime.time(16, 0), '16:00 \u2013 17:00'), (datetime.time(17, 0), '17:00 \u2013 18:00'), (datetime.time(18, 0), '18:00 \u2013 19:00'), (datetime.time(19, 0), '19:00 \u2013 20:00')], max_length=8, verbose_name='Zeitfenster Auslieferung **'),
        ),
        migrations.AlterField(
            model_name='order',
            name='timeframe_pickup',
            field=models.CharField(choices=[('ASAP', 'sobald wie m\xf6glich'), (datetime.time(8, 0), ' 8:00 \u2013  9:00'), (datetime.time(9, 0), ' 9:00 \u2013 10:00'), (datetime.time(10, 0), '10:00 \u2013 11:00'), (datetime.time(11, 0), '11:00 \u2013 12:00'), (datetime.time(12, 0), '12:00 \u2013 13:00'), (datetime.time(13, 0), '13:00 \u2013 14:00'), (datetime.time(14, 0), '14:00 \u2013 15:00'), (datetime.time(15, 0), '15:00 \u2013 16:00'), (datetime.time(16, 0), '16:00 \u2013 17:00'), (datetime.time(17, 0), '17:00 \u2013 18:00'), (datetime.time(18, 0), '18:00 \u2013 19:00'), (datetime.time(19, 0), '19:00 \u2013 20:00')], max_length=8, verbose_name='Zeitfenster Abholung **'),
        ),
        migrations.AlterField(
            model_name='order',
            name='to_phone_no',
            field=models.CharField(max_length=15, validators=[fwk.models.validate_phone_no], verbose_name='Telefonnummer'),
        ),
        migrations.RunPython(
            load_rates
        ),
        migrations.AddField(
            model_name='order',
            name='customer_email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='E-Mailadresse'),
        ),
        migrations.AlterField(
            model_name='order',
            name='timeframe_dropoff',
            field=models.CharField(choices=[('Allgemein', (('ASAP', 'schnellstm\xf6glich'), ('CUSTOM', 'individuell (bitte Bemerkung hinterlassen)'), ('LOW', 'entspannt ("im Laufe des Tages", "w\xe4hrend \xd6ffnungszeiten", \u2026)'))), ('Konkretes Zeitfenster', (('8', ' 8:00 \u2013  9:00 Uhr'), ('9', ' 9:00 \u2013 10:00 Uhr'), ('10', '10:00 \u2013 11:00 Uhr'), ('11', '11:00 \u2013 12:00 Uhr'), ('12', '12:00 \u2013 13:00 Uhr'), ('13', '13:00 \u2013 14:00 Uhr'), ('14', '14:00 \u2013 15:00 Uhr'), ('15', '15:00 \u2013 16:00 Uhr'), ('16', '16:00 \u2013 17:00 Uhr'), ('17', '17:00 \u2013 18:00 Uhr'), ('18', '18:00 \u2013 19:00 Uhr'), ('19', '19:00 \u2013 20:00 Uhr')))], max_length=8, verbose_name='Zeitfenster Auslieferung **'),
        ),
        migrations.AlterField(
            model_name='order',
            name='timeframe_pickup',
            field=models.CharField(choices=[('Allgemein', (('ASAP', 'schnellstm\xf6glich'), ('CUSTOM', 'individuell (bitte Bemerkung hinterlassen)'), ('LOW', 'entspannt ("im Laufe des Tages", "w\xe4hrend \xd6ffnungszeiten", \u2026)'))), ('Konkretes Zeitfenster', (('8', ' 8:00 \u2013  9:00 Uhr'), ('9', ' 9:00 \u2013 10:00 Uhr'), ('10', '10:00 \u2013 11:00 Uhr'), ('11', '11:00 \u2013 12:00 Uhr'), ('12', '12:00 \u2013 13:00 Uhr'), ('13', '13:00 \u2013 14:00 Uhr'), ('14', '14:00 \u2013 15:00 Uhr'), ('15', '15:00 \u2013 16:00 Uhr'), ('16', '16:00 \u2013 17:00 Uhr'), ('17', '17:00 \u2013 18:00 Uhr'), ('18', '18:00 \u2013 19:00 Uhr'), ('19', '19:00 \u2013 20:00 Uhr')))], max_length=8, verbose_name='Zeitfenster Abholung **'),
        ),
    ]
